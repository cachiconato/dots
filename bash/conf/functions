#!/bin/bash

DOWNLOADS=$HOME/Downloads

# Lists the last downloaded file
ldown() { 
  echo $DOWNLOADS/$(ls -t $DOWNLOADS | head -1)
}

# Moves the last downloaded file
mdown() {
  mv "`ldown`" $1
}

# Copies the last downloaded file
cdown() {
  cp "`ldown`" $1
}

# Sets and changes to the work directory
cw() {
  if [ $# -gt 0 ]; then
    set_cw $1
  fi

  if [ "$CW" == "" ]; then
    load_cw
  fi 

  cd $CW
}

# Loads the current working directory from the configuration file
load_cw() {
  source ~/.cw
}

# Sets the current working directory
set_cw() {
    CW="$(PWD)/$1"
    echo "export CW=$CW" > ~/.cw
    echo "Current working directory set to $CW"
}

# Prints out the current working directory
cw?() {
  load_cw
  echo "$CW"
}

send_commits() {
   if [ "$#" -ne "2" ]; then echo "Usage: send_commits number-of-commits /path/to/mounted/workspace/project" >&2; return 1; fi
   git log --pretty=oneline --name-status -n "$1" | sort -k2 | uniq -f1 | while read status line;
   #git log --name-status -n "$1" | grep 'ecom' | sort -k2 | uniq -f1 | while read status line;
   do
     from="$line";
     to="${2}/${line}";
     case "$status" in
       A|M)
         echo "Copying from:"; echo "    ${from}"; echo "to"; echo "    ${to}";
         mkdir -p "$(dirname "${to}")"
         /bin/cp -f "${from}" "${to}"
         ;;
       D)
         echo "Deleting file: $to"
         /bin/rm -f "$to"
         ;;
     esac
     echo "---- ---- ---- ---- --"
   done
 }

send_modified_files () { 
  if [ "$#" -ne "1" ]; then
    echo "Usage: send_modified_files /path/on/vm/to/workspace/project" 1>&2;
    return 1;
  fi;
  git ls-files --modified | while read line;
  do
    from="$line";
    to="${1}/${line#*/}";
    echo /bin/cp -f "'${from}'" "'${to}'";
    mkdir -p "$(dirname "${to}")";
    /bin/cp -f "${from}" "${to}";
  done
}

myfind() {
  FFOUND_PWD=${PWD}
  FFOUND=($(find . -iname "*$2*" -type "$1"))
  print_found
}

print_found() {
  if [ "${#FFOUND[*]}" -eq 0 ]; then return; fi
  local index=1
  echo ${FFOUND[*]} | tr -s ' ' '\n' | while read line; do
  if [ -t 1 ]; then printf "% 4d " $index; fi
  echo $line
  index=$((index + 1))
done
} 

ff() { myfind "f" "$1"; }

fn() {
  [ ! -z ${FFOUND[$1-1]} ] && echo ${FFOUND_PWD}/${FFOUND[$1-1]};
}

vf() { vi $(fn "$1"); }

killnow() {
  ps -ef | grep $1 | grep -v grep | awk '{print $2}' | xargs kill -9
}

alias iso='while sleep 1; do echo "Going ..."; curl -s "http://ft04.gid.gap.com:8000/invoke?operation=build&amp;objectname=CruiseControl+Project%3Aname%3Dtrunk-allocation.isolated.functional-test" | grep 'Invocation'; done'

